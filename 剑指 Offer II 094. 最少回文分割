class Solution {
public:
    int minCut(string s) {
        int n = s.size();
        //dp[i][j]表示i到j是否为一个回文串
        vector<vector<bool>> dp(n,vector<bool>(n,true));
        for(int i = n - 2; i >= 0; i--){
            for(int j = i + 1; j < n; j++){
                dp[i][j] = dp[i+1][j-1] && (s[i] == s[j]);
            }
        }
        //dp2[i]表示前i个字符需要多少次切割
        vector<int> dp2(n,INT_MAX);
        for(int i = 0; i < n; i++){
            if(dp[0][i]){
                dp2[i] = 0;
            }else{
                for(int j = 0; j < i; j++){
                    if(dp[j+1][i]){
                        dp2[i] = min(dp2[i], dp2[j]+1);
                    }
                }
            }
        }
        return dp2[n-1];
    }
};
