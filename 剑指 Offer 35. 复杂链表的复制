/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/
class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(head==nullptr)return head;
        Node* cur=head;
        while(cur!=nullptr){
            Node* copy=new Node(cur->val);
            copy->next=cur->next;
            cur->next=copy;
            cur=cur->next->next;
        }
        cur=head;
        while(cur!=nullptr){
            if(cur->random!=nullptr)
            cur->next->random=cur->random->next;
            cur=cur->next->next;
        }
        Node* copyHead=head->next;
        cur=head;
        Node* curCopy=head->next;
        while(cur!=nullptr){
            cur->next=cur->next->next;
            cur=cur->next;
            if(curCopy->next!=nullptr){
                curCopy->next=curCopy->next->next;
                curCopy=curCopy->next;
            }
        }
        return copyHead;
    }
};
