//回溯
class Solution {
public:
    vector<vector<int>> res;
    vector<int> path;
    void backTrack(vector<int>& a, int start, int sum, int target){
        if(sum >= target){
            if(sum == target)
                res.push_back(path);
            return;
        }
        for(int i = start; i < a.size(); i++){
            if(i > start && a[i] == a[i-1])continue;
            path.push_back(a[i]);
            backTrack(a,i+1,sum+a[i],target);
            path.pop_back();
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        sort(candidates.begin(), candidates.end());
        backTrack(candidates,0,0,target);
        return res;
    }
};
