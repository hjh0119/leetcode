class Solution {
public:
    const int mod = 1e9+7;
    最大公约数
    int gcd(int a,int b){
        return b==0?a:gcd(b,a%b);
    }
    //最小公倍数
    int lcm(int a,int b){
        return a*b/gcd(a,b);
    }
    int nthMagicalNumber(int n, int a, int b) {
       long long l = min(a,b);
       long long r = (long long)n*l;
       int c = lcm(a,b);
       while(l<=r){
           long long mid = (l+r)/2;
           long long cnt = mid/a+mid/b-mid/c;
           if (cnt>=n){
               r = mid-1;
           }
           else{
               l=mid+1;
           }
       }
       return (r+1)%mod;
    }
};
