//二色图
class Solution {
public:
    vector<int> color;
    bool valid;
    void dfs(int node, int c, const vector<vector<int>>& graph){
        color[node] = c;
        int c2 = (c==1?2:1);
        for(auto v: graph[node]){
            if(color[v] == 0){
                dfs(v,c2,graph);
                if(!valid)return;
            }else if(color[v] != c2){
                valid = false;
                return;
            }
        }
    }
    bool isBipartite(vector<vector<int>>& graph) {
        int n = graph.size();
        valid = true;
        color.resize(n,0);
        for(int i = 0; i < n && valid; i++){
            if(color[i] == 0){
                dfs(i,1,graph);
            }
        }
        return valid;
    }
};
