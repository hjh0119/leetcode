/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> ans;
    vector<int> path;
    void dfs(TreeNode* root,int curSum,int target){
        //if(curSum+root->val>target)return;
        path.push_back(root->val);
        if(curSum+root->val==target){
            if(root->left==nullptr&&root->right==nullptr)ans.push_back(path);
        }
        if(root->left)dfs(root->left,curSum+root->val,target);
        if(root->right)dfs(root->right,curSum+root->val,target);
        path.pop_back();
        return;
    }
    vector<vector<int>> pathSum(TreeNode* root, int target) {
        if(root==nullptr)return ans;
        dfs(root,0,target);
        return ans;
    }
};
