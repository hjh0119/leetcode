#51 N皇后
#回溯法
class Solution {
private:
    vector<vector<string>> result;
    void traceBack(int n,int row,vector<string>& chessBoard){
        if(row==n){
            result.emplace_back(chessBoard);
            return;
        }
        for(int col=0;col<n;col++){
            if(isValid(row,col,chessBoard,n)){
                chessBoard[row][col]='Q';
                traceBack(n,row+1,chessBoard);
                chessBoard[row][col]='.';
            }
        }
    }
    bool isValid(int row,int col,vector<string>& chessBoard,int n){
        for(int i=0;i<row;i++){
            if(chessBoard[i][col]=='Q')return false;
        }
        for(int i=row-1,j=col-1;i>=00&&j>=0;i--,j--){
            if(chessBoard[i][j]=='Q')return false;
        }
        for(int i=row-1,j=col+1;i>=0&&j<n;i--,j++){
            if(chessBoard[i][j]=='Q')return false;
        }
        return true;
    }
public:
    vector<vector<string>> solveNQueens(int n) {
        vector<string> chessBoard(n,string(n,'.'));
        traceBack(n,0,chessBoard);
        return result;
    }

};
