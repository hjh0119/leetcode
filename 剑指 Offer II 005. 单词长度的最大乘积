class Solution {
public:
    int maxProduct(vector<string>& words) {
        int length=words.size();
        vector<int> masks(length);
        for(int i=0;i<length;i++){
            string word=words[i];
            int wordLength=word.size();
            for(int j=0;j<wordLength;j++){
                masks[i]|=1<<(word[j]-'a');
            }
        }
        int maxx=0;
        for(int i=0;i<length;i++){
            for(int j=i+1;j<length;j++){
                if((masks[i]&masks[j])==0){
                    maxx=max(maxx,int(words[i].size()*words[j].size()));
                }
            }
        }
        return maxx;
    }
};
//利用masks记录每个word出现的字母
//再利用masks的&运算来判断是否有相同字母
