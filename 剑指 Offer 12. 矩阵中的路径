class Solution {
public:
    bool dfs(vector<vector<char>>& board,int i,int j,int curChar,string word){
        if(curChar==word.size())return true;
        if(i>=board.size()||i<0||j<0||j>=board[0].size())return false;
        if(board[i][j]!=word[curChar])return false;
        board[i][j]='*';
        if( dfs(board,i+1,j,curChar+1,word)||
            dfs(board,i-1,j,curChar+1,word)||
            dfs(board,i,j+1,curChar+1,word)||
            dfs(board,i,j-1,curChar+1,word))
            return true;
        board[i][j]=word[curChar];
        return false;
    }
    bool exist(vector<vector<char>>& board, string word) {
            for(int i=0;i<board.size();++i){
                for(int j=0;j<board[0].size();++j){
                    if(board[i][j]==word[0]){
                        if(dfs(board,i,j,0,word)) return true;
                    }
                }
            }
            return false;

    }
};
