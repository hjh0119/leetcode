//最直观的解法,用两个数组标记 空间复杂度O(m+n)
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        vector<int> row(matrix.size(),0);
        vector<int> col(matrix[0].size(),0);
        for(int i=0;i<matrix.size();++i){
            for(int j=0;j<matrix[0].size();++j){
                if(matrix[i][j]==0){
                    row[i]=1;
                    col[j]=1;
                }
            }
        }
        for(int i=0;i<row.size();++i){
            for(int j=0;j<col.size();++j){
                if(row[i]||col[j])matrix[i][j]=0;
            }
        }

            return;
    }

};


//空间复杂度O(1)
class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int n = matrix.size();
        int m = matrix[0].size();
        bool row = false, col = false;//检查第0行,第0列是否有0
        for (int i = 0; i < m; ++i) {
            if (matrix[0][i] == 0)row = true;
        }
        for (int i = 0; i < n; ++i) {
            if (matrix[i][0] == 0)col = true;
        }
        for (int i = 1; i < n; ++i) {
            for (int j = 1; j < m; ++j) {
                if (matrix[i][j] == 0) {
                    matrix[i][0] = 0;
                    matrix[0][j] = 0;
                }
            }
        }
        for (int i = 1; i < n; ++i) {
            for (int j = 1; j < m; ++j) {
                if (matrix[i][0] == 0 || matrix[0][j] == 0)matrix[i][j] = 0;
            }
        }
        if (row) {
            for (int i = 0; i < m; ++i)matrix[0][i] = 0;
        }
        if (col) {
            for (int i = 0; i < n; ++i)matrix[i][0] = 0;
        }
        return;
    }
};
