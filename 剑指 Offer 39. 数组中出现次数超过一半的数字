//哈希 时间复杂度O(n),空间复杂度O(n/2)
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        unordered_map<int,int> hash;
        for(int i=0;i<nums.size();i++){
            hash[nums[i]]+=1;
            if(hash[nums[i]]>nums.size()/2)return nums[i];
        }
        return 0;
    }
};

//摩尔投票 时间复杂度O(n),空间复杂度O(1)
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int res=0,count=0;
        for(int i=0;i<nums.size();i++){
            if(count==0){
                res=nums[i];
                count++;
            }
            else{
                res==nums[i]?count++:count--;
            }
        }
        return res;
    }
};
