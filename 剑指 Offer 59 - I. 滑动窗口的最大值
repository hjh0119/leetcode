//优先队列
class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        int n = nums.size();
        deque<int> dq;
        vector<int> res;

        if(n == 0)return res;

        for(int i = 0; i < n; i++){
            if(!dq.empty() && i - dq.front() + 1 > k){
                dq.pop_front();
            }
            while(!dq.empty() && nums[dq.back()] <= nums[i]){
                dq.pop_back();
            }
            dq.push_back(i);
            if(i >= k - 1)res.emplace_back(nums[dq.front()]);
        }
        return res;
    }
};
