class Solution {
public:
    vector<int> path;
    vector<vector<int>> res;

    void dfs(const vector<vector<int>>& graph, int cur, int target){
        path.emplace_back(cur);
        if(cur == target){
            res.emplace_back(path);
        }else{
            for(auto vertex: graph[cur]){
                dfs(graph,vertex,target);
            }
        }
        path.pop_back();
    }

    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        int n = graph.size();
        dfs(graph,0,n-1);
        return res;
    }
};
