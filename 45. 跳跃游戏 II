//暴力
class Solution {
public:
    int jump(vector<int>& nums) {
        int n = nums.size();
        vector<int> dp(n,INT_MAX);
        dp[0] = 0;
        for(int i = 0; i < n; i++){
            for(int j = 1; j <= nums[i] && i + j < n; j++){
                dp[i + j] = min(dp[i + j], dp[i] + 1);
            }
        }
        return dp[n-1];
    }
};

class Solution {
public:
    int jump(vector<int>& nums) {
        int n = nums.size();
        int maxPos = 0, end = 0, step = 0;
        for(int i = 0; i < n - 1; i++){
                maxPos = max(maxPos, i + nums[i]);
                if(i == end){
                    end = maxPos;
                    ++step;
                }
            }
        return step;
    }
};
