//官解 前缀和 + dfs
class Solution {
public:
    unordered_map<long long, int> prefix;//记录遍历到当前节点时,之前节点每种前缀和的数量
    int dfs(TreeNode* root,long long curr,int targetSum){
        if(!root)return 0;
        int ret = 0;
        curr += root->val;
        if(prefix.count(curr - targetSum)){
            ret = prefix[curr - targetSum];
        }
        prefix[curr]++;
        ret += dfs(root->left,curr,targetSum);
        ret += dfs(root->right,curr,targetSum);
        prefix[curr]--;

        return ret;
    }
    int pathSum(TreeNode* root, int targetSum) {
        prefix[0] = 1;
        return dfs(root,0,targetSum);
    }
};
