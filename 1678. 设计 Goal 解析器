//用栈模拟
class Solution {
public:
    string interpret(string command) {
        int n=command.size();
        stack<char> s;
        for(int i=0;i<n;i++){
            if(command[i]!=')')s.push(command[i]);
            else {
                if(s.top()=='('){
                    s.pop();
                    s.push('o');
                }
                else{
                    while(s.top()!='(')s.pop();
                    s.pop();
                    s.push('a');
                    s.push('l');
                }
            }
        }
        string res;
        while(!s.empty()){
            res.push_back(s.top());
            s.pop();
        }
        reverse(res.begin(),res.end());
        return res;
    }
};

//直接遍历一遍
class Solution {
public:
    string interpret(string command) {
        string res;
        for(int i=0;i<command.size();i++){
            if(command[i]=='G')res.push_back('G');
            else if(command[i]=='('){
                if(command[i+1]==')'){
                    res.push_back('o');
                    i++;
                }
                else{
                    res.push_back('a');
                    res.push_back('l');
                    i+=3;
                }
            }
        }
        return res;
    }
};
