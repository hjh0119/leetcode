class NumMatrix {
private:
    vector<vector<int>> preSum;
public:
    NumMatrix(vector<vector<int>>& matrix) {
        int n=matrix.size(),m=matrix[0].size();
        preSum.resize(n+1,vector<int>(m+1,0));
        for(int i=0;i<n;i++){
            int count=0;//计算目前这一行的前缀和
            for(int j=0;j<m;j++){
                count+=matrix[i][j];
                preSum[i+1][j+1]=preSum[i][j+1]+count;//preSum[i+1][j+1]表示从(i,j)到(0,0)的矩阵元素和
            }
        }
    }
    
    int sumRegion(int row1, int col1, int row2, int col2) {
        return preSum[row2+1][col2+1] - preSum[row1][col2+1] - preSum[row2+1][col1] + preSum[row1][col1];
    }
};

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix* obj = new NumMatrix(matrix);
 * int param_1 = obj->sumRegion(row1,col1,row2,col2);
 */
