/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;

    Node() {}

    Node(int _val) {
        val = _val;
        left = NULL;
        right = NULL;
    }

    Node(int _val, Node* _left, Node* _right) {
        val = _val;
        left = _left;
        right = _right;
    }
};
*/
class Solution {
public:
    Node *head,*pre;
    void inOrder(Node* cur){
        if(cur==nullptr)return;
        inOrder(cur->left);
        if(pre==nullptr)head=cur;
        else pre->right=cur;
        cur->left=pre;
        pre=cur;
        inOrder(cur->right);
    }
    Node* treeToDoublyList(Node* root) {
        if(root==nullptr)return nullptr;
        inOrder(root);
        pre->right=head;
        head->left=pre;
        return head;
    }
};
