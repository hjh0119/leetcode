class Solution {
public:
    vector<vector<int>> res;
    vector<int> path;
    vector<bool> visited;
    int size;
    void backTrack(vector<int>& nums){
        if(path.size() == size){
            res.push_back(path);
        }
        for(int i = 0; i < size; i++){
            if(visited[i])continue;
            visited[i] = true;
            path.push_back(nums[i]);
            backTrack(nums);
            path.pop_back();
            visited[i] = false;
        }
    }
    vector<vector<int>> permute(vector<int>& nums) {
        int n = nums.size();
        size = n;
        visited.resize(n,false);
        backTrack(nums);
        return res;
    }
};
