/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        stack<int> s1,s2;
        ListNode*cur1=l1,*cur2=l2;
        while(cur1!=nullptr){
            s1.push(cur1->val);
            cur1=cur1->next;
        }
        while(cur2!=nullptr){
            s2.push(cur2->val);
            cur2=cur2->next;
        }
        int carry=0;
        ListNode* post=nullptr,*pre=nullptr;
        while(!s1.empty()||!s2.empty()){
            int a=0,b=0;
            if(!s1.empty()){
                a=s1.top();
                s1.pop();
            }
            if(!s2.empty()){
                b=s2.top();
                s2.pop();
            }
            int sum=(a+b+carry)%10;
            carry=(a+b+carry)/10;
            pre=new ListNode(sum,post);
            post = pre;
        }
        if(carry==1)pre=new ListNode(1,pre);
        return pre;
        
    }
};
